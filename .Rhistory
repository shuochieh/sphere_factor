r = 9
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 2
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(10, m)
r = 8
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 2
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 100
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 500
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
summary(sub_loss_J)
hist(sub_loss_J[,1])
hist(sub_loss_J[,1], breaks = 30)
hist(sub_loss_J[,1], breaks = 60)
max.sim = 1000
n = 300
m = 5
ds = rep(10, m)
r = 3
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(20, m)
r = 3
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(10, m)
r = 6
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(10, m)
r = 8
snr = 0.7
b1 = snr * (1 - 0.8) * pi / (2 * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (2 * r)
spec = 1
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 100
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
spec = 1
if (spec == 1) {
A = 2
} else if (spec == 2) {
A = 0.5
} else if (spec == 3) {
A = 0.1
}
b1 = snr * (1 - 0.8) * pi / (A * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (A * r)
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
hist(sub_loss_J[,1], breaks = 60)
res$mu_loss
# Simulation
max.sim = 1000
n = 100
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
spec = 1
if (spec == 1) {
A = 2
} else if (spec == 2) {
A = 0.5
} else if (spec == 3) {
A = 0.1
}
b1 = snr * (1 - 0.8) * pi / (A * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (A * r)
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
if (mean(res$mu_loss) > 1) {
cat("  iteration", sim, ":", round(mean(res$mu_loss), 3), "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
# Simulation
max.sim = 1000
n = 100
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
spec = 1
if (spec == 1) {
A = 2
} else if (spec == 2) {
A = 0.5
} else if (spec == 3) {
A = 0.1
}
b1 = snr * (1 - 0.8) * pi / (A * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (A * r)
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
if (res$pred_err_joint > 0.3) {
cat("  iteration", sim, ":", round(mean(res$mu_loss), 3), "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
summary(dist_loss)
hist(dist_loss, breaks=60)
max.sim = 1000
n = 100
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
spec = 1
if (spec == 1) {
A = 2
} else if (spec == 2) {
A = 0.5
} else if (spec == 3) {
A = 0.1
}
b1 = snr * (1 - 0.8) * pi / (A * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (A * r)
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
if (res$D_joint > 0.1) {
cat("  iteration", sim, ":", round(mean(res$mu_loss), 3), "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
max.sim = 1000
n = 300
m = 5
ds = rep(5, m)
r = 3
snr = 0.7
spec = 1
if (spec == 1) {
A = 2
} else if (spec == 2) {
A = 0.5
} else if (spec == 3) {
A = 0.1
}
b1 = snr * (1 - 0.8) * pi / (A * r)
b2 = (1 - snr) * (1 - 0.8) * pi / (A * r)
dist_loss = rep(0, max.sim)
sub_loss_J = matrix(0, nrow = max.sim, ncol = m)
sub_loss_S = matrix(0, nrow = max.sim, ncol = m)
PE_J = rep(0, max.sim)
PE_O = rep(0, max.sim)
PE_S = rep(0, max.sim)
for (sim in 1:max.sim) {
res = simulation(n, ds, r, b1, b2, spec, mu_tol = 1e-4)
dist_loss[sim] = res$D_joint
sub_loss_J[sim,] = res$D_each_joint
sub_loss_S[sim,] = res$D_each_separate
PE_J[sim] = res$pred_err_joint
PE_S[sim] = res$pred_err_separate
PE_O[sim] = res$pred_err_oracle
if (sim > 1 && sim %% 100 == 0) {
cat("iteration", sim, "\n")
}
}
mean(dist_loss); sd(dist_loss)
mean(PE_J); sd(PE_J)
mean(PE_S); sd(PE_S)
mean(PE_O); sd(PE_O)
colMeans(sub_loss_J); apply(sub_loss_J, 2, sd)
colMeans(sub_loss_S); apply(sub_loss_S, 2, sd)
